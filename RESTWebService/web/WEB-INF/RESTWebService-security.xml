<?xml version="1.0" encoding="UTF-8"?>
<beans:bean xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns="http://www.springframework.org/schema/security"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.1.xsd">



    <!--
        The below three lines of XML configure Spring security to intercept requests for all URLS (as specified by the
        <intercept-url pattern="..."/> attribute. This will restrict access to only authenticated users who have the
        defined role of 'ROLE_USER'.

        The <http> element automatically sets up a FilterChainProxy (whcih is delegated to by the DelegatingFilterProxy,
        which is configured within the web.xml file)

        auto-config="true" provides us with the following additional configured attributes (by default)

            - <form-login/>
            - <http-basic/>
            - <logout/>
            - <intercept-url pattern="/audit/show*" access="ROLE_USER"/>

        As default, Spring will use it's own login page. We can configure Spring to use a custom login page by using the
        following declaration inside the <http> tag.

        <form-login login-processing-url="/static/j_spring_security_check" login-page="/login"
                                    authentication-failure-url="/login?login_error=t"/>

    -->
    <http auto-config="true">
        <intercept-url pattern="/audit/show*" access="ROLE_USER" />
    </http>

    <!--
        An example of authenticating an in-memory user repository
    -->
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="username" password="password" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

</beans:bean>